{
  "swagger": "2.0",
  "info": {
    "description": "This API is for Littlefish action marketplace MVP. For further information go to linktr.ee/littlefish",
    "version": "1.0.0",
    "title": "Littlefish MVP API"
  },
  "schemes": [
    "https",
    "http"
  ],
  "tags": [
    {
      "name": "action",
      "description": "Everything about Actions",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://publish.obsidian.md/littlefish-foundation/Littlefish+Vault"
      }
    },
    {
      "name": "colony",
      "description": "Colonies of littlefishes"
    },
    {
      "name": "user",
      "description": "Users are members of the colonies and create actions"
    },
    {
      "name": "action-sale",
      "description": "Action sales."
    },
    {
      "name": "action-type",
      "description": "Action types."
    }
  ],
  "paths": {
    "/action-sale/{actionID}/": {
      "get": {
        "tags": [
          "action-sale"
        ],
        "summary": "Get the specified action sale",
        "parameters": [
          {
            "name": "actionID",
            "in": "path",
            "description": "ID of the action",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the specified action sale"
          }
        }
      },
      "delete": {
        "tags": [
          "action-sale"
        ],
        "summary": "Delete the specified action sale",
        "parameters": [
          {
            "name": "actionID",
            "in": "path",
            "description": "ID of the action",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/action-sale/": {
      "post": {
        "tags": [
          "action-sale"
        ],
        "summary": "Create the sale for specified action",
        "parameters": [
          {
            "name": "actionID",
            "in": "query",
            "description": "ID of the action",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "Price of the action",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful action sale creation"
          }
        }
      }
    },
    "/action-type/{name}/": {
      "get": {
        "tags": [
          "action-type"
        ],
        "summary": "Get the specified action type",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the action type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the specified type"
          }
        }
      },
      "delete": {
        "tags": [
          "action-type"
        ],
        "summary": "Delete the specified action type",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the action type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/action-type/": {
      "get": {
        "tags": [
          "action-type"
        ],
        "summary": "Get action types",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page of the response",
            "required": false,
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Count of the types in the page",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with action types"
          }
        }
      },
      "post": {
        "tags": [
          "action-type"
        ],
        "summary": "Create action type",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response of creation"
          }
        }
      }
    },
    "/action-type/popular": {
      "get": {
        "tags": [
          "action-type"
        ],
        "summary": "Get popular action types",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Count of popular types default is 10",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with popular action types"
          }
        }
      }
    },
    "/user/{walletAddress}/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get the specified user",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Wallet address of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the specified user"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete the specified user",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Wallet address of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/user/{walletAddress}/colony": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Update the colony of user",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Wallet address of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "colonyName",
            "in": "query",
            "description": "Colony name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Colony name successfully deleted."
          }
        }
      }
    },
    "/user/": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create an user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get filtered records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user is successfully created."
          }
        }
      }
    },
    "/colony/{colonyName}/": {
      "get": {
        "tags": [
          "colony"
        ],
        "summary": "Get the specified colony",
        "parameters": [
          {
            "name": "colonyName",
            "in": "path",
            "description": "Colony name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the specified colony"
          }
        }
      }
    },
    "/colony/": {
      "get": {
        "tags": [
          "colony"
        ],
        "summary": "Get colonies from server database",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The current page of colony response",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The count of colony's to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with colony array from the database"
          }
        }
      },
      "post": {
        "tags": [
          "colony"
        ],
        "summary": "Create an colony",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "colony properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createColony"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A colony is successfully created."
          }
        }
      }
    },
    "/colony/{colonyName}/actions": {
      "get": {
        "tags": [
          "colony"
        ],
        "summary": "Get actions of the colony",
        "parameters": [
          {
            "name": "colonyName",
            "in": "path",
            "description": "Colony name",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "The current page of action response",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The count of action's to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetName",
            "in": "query",
            "description": "action asset name to filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerName",
            "in": "query",
            "description": "action owner name to filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status of the action",
            "required": false,
            "type": "string"
          },
          {
            "name": "minDate",
            "in": "query",
            "description": "minimum creation date of action",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxDate",
            "in": "query",
            "description": "maximum creation date of action",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortingField",
            "in": "query",
            "description": "field to sort actions",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "1 for ascending, -1 for descending",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with colony actions"
          }
        }
      }
    },
    "/action/{id}/": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Get the specified action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Action ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the specified action"
          }
        }
      },
      "delete": {
        "tags": [
          "action"
        ],
        "summary": "Delete the specified action",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Action ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/action/{id}/sync-status": {
      "patch": {
        "tags": [
          "action"
        ],
        "summary": "sync specified action with chain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Asset name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success of sync operation"
          }
        }
      }
    },
    "/action/": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Get actions from server database",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The current page of action response",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The count of action's to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetName",
            "in": "query",
            "description": "aciton asset name to filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerName",
            "in": "query",
            "description": "action owner name to filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status of the action",
            "required": false,
            "type": "string"
          },
          {
            "name": "minDate",
            "in": "query",
            "description": "minimum creation date of action",
            "required": false,
            "type": "string"
          },
          {
            "name": "maxDate",
            "in": "query",
            "description": "maximum creation date of action",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortingField",
            "in": "query",
            "description": "field to sort actions",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortingOrder",
            "in": "query",
            "description": "1 for ascending, -1 for descending",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with actions"
          }
        }
      },
      "post": {
        "tags": [
          "action"
        ],
        "summary": "Create an action",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get filtered records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mintAction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Action is successfully created."
          }
        }
      }
    }
  },
  "definitions": {
    "createUser": {
      "properties": {
        "walletAddress": {
          "type": "string",
          "format": "wallet address",
          "description": "wallet address of the user",
          "example": "addr1q9fjzdqkar0fm.......lumhp9znnq66zcn5"
        },
        "colonyName": {
          "type": "string",
          "format": "name",
          "description": "colony name which user is part of.",
          "example": "Littlefish"
        },
        "name": {
          "type": "string",
          "format": "name",
          "description": "user name",
          "example": "burak.littlefish"
        },
        "avatar": {
          "type": "string",
          "format": "uri",
          "description": "image source to the avatar",
          "example": "https://littlefish-mvp.s3.eu-central-1.amazonaws.com/avatar_vader.jpeg"
        }
      }
    },
    "createColony": {
      "properties": {
        "name": {
          "type": "string",
          "format": "name",
          "description": "colony name",
          "example": "Littlefish"
        },
        "walletAddress": {
          "type": "string",
          "format": "Address",
          "description": "ADA address of the colony",
          "example": "addr1q9fjzdqkar0fm.......lumhp9znnq66zcn5"
        },
        "description": {
          "type": "string",
          "format": "string",
          "description": "colony description text",
          "example": "This is my colony."
        },
        "superColony": {
          "type": "string",
          "format": "Name",
          "description": "Parent colony if it exists",
          "example": "Bigger Littlefish"
        },
        "coverImage": {
          "type": "string",
          "format": "url",
          "description": "link to the cover image"
        },
        "files": {
          "type": "array",
          "format": "array of objects",
          "description": "Array of extra files with their types and sources"
        }
      }
    },
    "mintAction": {
      "properties": {
        "assetName": {
          "type": "string",
          "format": "Asset Name",
          "description": "Asset name",
          "example": "LittlefishWhitepaper"
        },
        "name": {
          "type": "string",
          "format": "Name",
          "description": "Name of the Action",
          "example": "Littlefish Whitepaper"
        },
        "colonyName": {
          "type": "string",
          "format": "Name",
          "description": "Name of the colony this actions belongs to",
          "example": "Littlefish"
        },
        "description": {
          "type": "string",
          "format": "string",
          "description": "ACTION description text",
          "example": "This is my action."
        },
        "ownerName": {
          "type": "string",
          "format": "Name",
          "description": "Name of the owner of ACTION",
          "example": "Burak.littlefish"
        },
        "price": {
          "type": "number",
          "format": "Price in ADA",
          "description": "Price of the Action",
          "example": "0"
        },
        "actionType": {
          "type": "string",
          "format": "Type of action",
          "description": "Type of action of the ACTION",
          "example": "Research"
        },
        "image": {
          "type": "string",
          "format": "base64 string",
          "description": "Base64 representation of image",
          "example": "VEVTVEFTRGZzZGZzZGZndmRmZ3ZkZmdkZmc="
        },
        "mediaType": {
          "type": "string",
          "format": "media format",
          "description": "Format of media",
          "example": "image/png"
        },
        "walletID": {
          "type": "string",
          "format": "Shelly address",
          "description": "wallet address of action owner",
          "example": "addr1q9fjzdqkar0fm.......lumhp9znnq66zcn5"
        },
        "links": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "format": "url",
                "description": "url of link",
                "example": "https://linktr.ee/littlefish.foundation"
              },
              "urlName": {
                "type": "string",
                "format": "name of link",
                "description": "name of the link.",
                "example": "Littlefish Foundation Linktree"
              }
            }
          }
        }
      }
    }
  }
}