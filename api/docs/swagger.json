{
  "swagger": "2.0",
  "info": {
    "description": "This API is for Littlefish ACTION marketplace MVP. For further information go to linktr.ee/littlefish",
    "version": "1.0.0",
    "title": "Littlefish MVP API"
  },
  "schemes": [
    "http"
  ],
  "tags": [
    {
      "name": "action",
      "description": "Everything about Actions",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://publish.obsidian.md/littlefish-foundation/Littlefish+Vault"
      }
    },
    {
      "name": "colony",
      "description": "Colonies of littlefishes"
    },
    {
      "name": "user",
      "description": "Users are members of the colonies and create actions"
    }
  ],
  "paths": {
    "/user/{walletAddress}/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get the specified user",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Wallet address of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the specified user"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete the specified user",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Wallet address of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/user/{walletAddress}/colony": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Update the colony of user",
        "parameters": [
          {
            "name": "walletAddress",
            "in": "path",
            "description": "Wallet address of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "colonyName",
            "in": "query",
            "description": "Colony name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Colony name successfully deleted."
          }
        }
      }
    },
    "/user/": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create an user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get filtered records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user is successfully created."
          }
        }
      }
    },
    "/colony/{colonyName}/": {
      "get": {
        "tags": [
          "colony"
        ],
        "summary": "Get the specified colony",
        "parameters": [
          {
            "name": "colonyName",
            "in": "path",
            "description": "Colony name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the specified colony"
          }
        }
      }
    },
    "/colony/": {
      "get": {
        "tags": [
          "colony"
        ],
        "summary": "Get colonies from server database",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The current page of colony response",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The count of colony's to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with colony array from the database"
          }
        }
      },
      "post": {
        "tags": [
          "colony"
        ],
        "summary": "Create an colony",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "colony properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createColony"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "A colony is successfully created."
          }
        }
      }
    },
    "/colony/{colonyName}/actions": {
      "get": {
        "tags": [
          "colony"
        ],
        "summary": "Get actions of the colony",
        "parameters": [
          {
            "name": "colonyName",
            "in": "path",
            "description": "Colony name",
            "required": true,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "First colony to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "The count of colony's to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter object",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorter",
            "in": "query",
            "description": "sorter object",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with colony array from the chain"
          }
        }
      }
    },
    "/action/{assetName}/": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Get the specified action",
        "parameters": [
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with the specified action"
          }
        }
      },
      "delete": {
        "tags": [
          "action"
        ],
        "summary": "Delete the specified action",
        "parameters": [
          {
            "name": "assetName",
            "in": "path",
            "description": "Asset name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful deletion"
          }
        }
      }
    },
    "/action/": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Get actions from server database",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The current page of action response",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The count of action's to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "filter object",
            "required": false,
            "type": "string"
          },
          {
            "name": "sorter",
            "in": "query",
            "description": "sorter object",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with ACTION array from the database"
          }
        }
      },
      "post": {
        "tags": [
          "action"
        ],
        "summary": "Create an action",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get filtered records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mintAction"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Action is successfully created."
          }
        }
      }
    },
    "/action/{assetName}/sale": {
      "post": {
        "tags": [
          "action"
        ],
        "summary": "Create sale for action",
        "parameters": [
          {
            "name": "assetName",
            "in": "path",
            "description": "Name of the asset",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "description": "Price for the sale in ADA",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with ACTION array from the database"
          }
        }
      }
    },
    "/action/chain": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Get actions from chain",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "First action to return",
            "required": false,
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "description": "The count of action's to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with ACTION array from the chain"
          }
        }
      }
    },
    "/action/sales": {
      "get": {
        "tags": [
          "action"
        ],
        "summary": "Get action sales from chain",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "The count of action's to return",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with action sales array from the chain"
          }
        }
      }
    }
  },
  "definitions": {
    "createUser": {
      "properties": {
        "walletAddress": {
          "type": "string",
          "format": "wallet address",
          "description": "wallet address of the user",
          "example": "addr1q9fjzdqkar0fm.......lumhp9znnq66zcn5"
        },
        "colonyName": {
          "type": "string",
          "format": "name",
          "description": "colony name which user is part of.",
          "example": "Littlefish"
        },
        "name": {
          "type": "string",
          "format": "name",
          "description": "user name",
          "example": "burak.littlefish"
        } ,
        "avatar": {
          "type": "string",
          "format": "uri",
          "description": "image source to the avatar",
          "example": "https://littlefish-mvp.s3.eu-central-1.amazonaws.com/avatar_vader.jpeg"
        }
      }
    },
    "createColony": {
      "properties": {
        "name": {
          "type": "string",
          "format": "name",
          "description": "colony name",
          "example": "Littlefish"
        },
        "walletAddress": {
          "type": "string",
          "format": "Address",
          "description": "ADA address of the colony",
          "example": "addr1q9fjzdqkar0fm.......lumhp9znnq66zcn5"
        },
        "description": {
          "type": "string",
          "format": "string",
          "description": "colony description text",
          "example": "This is my colony."
        },
        "superColony": {
          "type": "string",
          "format": "Name",
          "description": "Parent colony if it exists",
          "example": "Bigger Littlefish"
        },
        "coverImage": {
          "type": "string",
          "format": "url",
          "description": "link to the cover image"
        },
        "files": {
          "type": "array",
          "format": "array of objects",
          "description": "Array of extra files with their types and sources"
        }
      }
    },
    "mintAction": {
      "properties": {
        "assetName": {
          "type": "string",
          "format": "Asset Name",
          "description": "Asset name",
          "example": "LittlefishWhitepaper"
        },
        "name": {
          "type": "string",
          "format": "Name",
          "description": "Name of the Action",
          "example": "Littlefish Whitepaper"
        },
        "colonyName": {
          "type": "string",
          "format": "Name",
          "description": "Name of the colony this actions belongs to",
          "example": "Littlefish"
        },
        "description": {
          "type": "string",
          "format": "string",
          "description": "ACTION description text",
          "example": "This is my action."
        },
        "ownerName": {
          "type": "string",
          "format": "Name",
          "description": "Name of the owner of ACTION",
          "example": "Burak.littlefish"
        },
        "actionType": {
          "type": "string",
          "format": "Type of action",
          "description": "Type of action of the ACTION",
          "example": "Research"
        },
        "image": {
          "type": "string",
          "format": "base64 string",
          "description": "Base64 representation of image",
          "example": "VEVTVEFTRGZzZGZzZGZndmRmZ3ZkZmdkZmc="
        },
        "mediaType": {
          "type": "string",
          "format": "media format",
          "description": "Format of media",
          "example": "image/png"
        },
        "youtubeLink": {
          "type": "string",
          "format": "url",
          "description": "Youtube link",
          "example": "https://www.youtube.com/watch?v=IYCS9kEr7vw"
        },
        "otherLink": {
          "type": "string",
          "format": "url",
          "description": "Other Relevant link",
          "example": "https://publish.obsidian.md/littlefish-foundation/Littlefish+Vault"
        }
      }
    }
  }
}