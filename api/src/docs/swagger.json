{
  "swagger": "2.0",
  "info": {
    "description": "This API is for Littlefish NFT marketplace MVP. For further information go to linktr.ee/littlefish",
    "version": "1.0.0",
    "title": "Littlefish MVP API"
  },
  "schemes": [
    "https"
  ],
  "tags": [],
  "definitions": {
    "nftFromDatabaseQuery": {
      "properties": {
        "page": {
          "type": "number",
          "format": "integer",
          "example": "1"
        },
        "limit": {
          "type": "number",
          "format": "integer",
          "example": "10"
        }
      }
    },
    "nftFromChainQuery": {
      "properties": {
        "cursor": {
          "type": "string",
          "format": "ObjectId",
          "description": "Object Id"
        },
        "size": {
          "type": "number",
          "format": "integer",
          "example": "10"
        }
      }
    },
    "mintNftQuery": {
      "properties": {
        "nft": {
          "type": "object",
          "properties": {
            "asset_name": {
              "type": "string",
              "format": "Asset Name",
              "description": "Asset name",
              "example": "LittlefishJohnDoeAction1"
            },
            "name": {
              "type": "string",
              "format": "Name",
              "description": "Name",
              "example": "Littlefish John Doe Action 1"
            },
            "description": {
              "type": "string",
              "format": "string",
              "description": "NFT description text",
              "example": "This is my action."
            },
            "image": {
              "type": "string",
              "format": "base64 string",
              "description": "Base64 representation of image",
              "example": "iVBORw0KGgoAAAANSU.....hEUgAADQYAAA0HCAYAAACB0xAqAAAACXBIWXMA"
            },
            "media_type": {
              "type": "string",
              "format": "media format",
              "description": "Format of media",
              "example": "image/png"
            },
            "files": {
              "type": "array",
              "format": "array of objects",
              "description": "additional files",
              "example": ""
            },
            "metadata_attributes": {
              "type": "array",
              "format": "array of objects",
              "description": "Metadata attributes of the nft",
              "example": "[{ 'tag': '<collection>', 'value': 'Littlefish MVP' }, { 'tag': '<collection>', 'value': 'Littlefish MVP' }]"
            },
            "custom_attributes": {
              "type": "object",
              "format": "object",
              "description": "Custom attributes of the nft",
              "example": "{ 'links': [ 'youtube.com/littlefish', 'twitter.com/littlefishdao] }"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/nft/chain": {
      "get": {
        "tags": [
          "Nfts"
        ],
        "summary": "Get nfts from server database",
        "parameters": [
          {
            "in": "path",
            "name": "limit",
            "description"	: "Limit the count of nfts",
            "type"	:	"integer",
            "format"	:	"int64",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with NFT array from the chain"
          }
        }
      }
    },
    "/nft/": {
      "get": {
        "tags": [
          "Nfts"
        ],
        "summary": "Get nfts from server database",
        "parameters": [
          {
            "in": "body",
            "name": "query",
            "description": "Get filtered records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nftFromDatabaseQuery"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with NFT array from the database"
          }
        }
      },
      "post": {
        "tags": [
          "Nfts"
        ],
        "summary": "Create an nft",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Get filtered records",
            "required": true,
            "schema": {
              "$ref": "#/definitions/mintNftQuery"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Nft is successfully created."
          }
        }
      }
    }
  }
}
